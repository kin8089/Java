gedit : 텍스트 입력하고 저장가능


-- vi 에디터 

1. 명령 모드
기초 모드. esc 키를 통해 명령모드로 돌아옴

2. 입력 모드
a or i를 입력시 입력모드로 진입

3. 라인 모드
; 입력 시 라인모드 진입

:wq  :  에디터 종료 ( w : write = 저장 , q : quite = 종료) 
:q!   :  저장하기 안하고 종료


sudo apt install vim  : 에디터 설치

vi study.txt : 스터디파일 생성하고 vi 에디터 실행


-- vi 에디터에서 커서 이동

h : 한칸 왼쪽으로

l : 한칸 오른쪽으로

j : 위로

k : 아래로


-- 입력모드 전환

i : 현재 커서 위치부터 입력

a : 커스 다음칸부터 입력

o : 커서의 다음줄에 입력

s : 현재 커서 위치의 한 글자를 지우고 입력


vimtutor : 연습프로그램


라인모드 ->  :set nu  : 라인넘버 표기


-- 명령모드 

gg : 첫 행으로 이동

G : 마지막 행으로 이동

행번호G : 해당 행으로 이동

/문자열 : 문자열 아래로 검색
?문자열 : 문자열 위로 검색
n : 찾은 문자열 아래로 검색
N : 찾은 문자열 위로 검색

:%s/[원본단어]/[바꿀단어] : 문자열 치환

r : 커서가 위치한 내용을 다른 내용으로 수정

작업 도중 ctl + s입력시 멈춤 현상 -> ctl + q로 해제

u : 롤백

cc : 커서가 위치한 행을 모두 수정

C : 커서 위치부터 행의 끝까지 내용을 수정

x : 커서 위치의 한 글자 삭제

#명령어 : #개수만큼 명령어 실행

dd : 커서 위치의 행 삭제


-- vi 설정

vi .vimrc 

set nu 입력 


-------------------------------------------------------------------------------------------

사용자 계정 관리


etc/passwd
etc/shadow
etc/group
etc/gshadow


-- useradd 유저명 : 유저 생성

useradd -m -d /home/work_06 master

tail /etc/passwd : 생성한 유저가 있는지 확인

psswd 유저명 : 패스워드 생성

chage -l user3


cat /etc/passwd | grep 사용자명 : 해당 사용자의 정보 출력


cd /home

cd /etc/default 에서 useradd 파일 vi편집기에서 기본 쉘을 bash로 변경


-- usermod 

usermod -u : uid 변경

usermod -d : 홈 디렉토리 변경

usermod -l : 로그인 id 변경


-- userdel : 유저 삭제


find -user UID-exec rm -r{} \; : 해당 uid가진 유저 찾아서 삭제


------------------------------------------------------------------------------------------------------

group 


-- groupadd : 생성

groupadd db_zone

gpasswd

usermod -a -G nt_zone user4 : 그룹에 유저를 추가


-- groupdel : 삭제


usermod -G ' ' master

gpasswd -d user3 nt_zone : 사용자 그룹에서 제거

cat /etc/group


usermod -aG sudo user1 : 유저1에게 sudo권한 줌


grep "/bin/bash" /etc/passwd | cut -d ':' -f1


------------------------------------------------------------------------------------------------------

file 시스템


가상 파일 시스템 VFS


cat -n /proc/filesystems : 파일 시스템 행 번호와 출력


/etc/fstab 파일 : 리눅스 시스템이 부팅될 때 시스템에 대한 마운트 설정 정보를 가짐


mount : 마운트 설정 

umount : 마운트 해제

df : usb정보 출력

umount /dev/sdb1

fdisk -l (슈퍼유저)

fdisk /dev/sdb 

p : 파티션

n : 파티션 할당

d : 파티션 삭제

w : 나가기

mkfs.ext4 /dev/sdb1 : 포맷

cd /mnt

mkdir usb1

cd usb1

echo hello usb1 > hello.txt

cat hello.txt

cd ..

ls

mount /dev/sdb1 /mnt/usb1

cd usb1

echo im usb > readme.txt

cat readme.txt


fdisk /dev/sdb

mkfs.ext4 /dev/sdb1

-------------------------------------------------------------------------------------------------------


마운트 : 하드디스크 , usb같은 물리적인 장치를 특정 위치(디렉토리)에 연결

-- lsblk -f : 스토리지 디바이스 출력

-- fdisk : 디스크의 파티션을 확인하고 추가 삭제하는 명령어

-- fdisk -l : 현재 디스크의 파티션 테이블 정보 출력

-- df : 현재 마운트된 디스크 정보 출력 (연결해도 마운트를 진행하지 않으면 여기 출력 x)

-- 마운트를 하기 전에 파티셔닝과 포맷을 진행해야 함

-- fdisk /dev/sdb : 파티션 명령어

-p : 현재 디스크 정보 출력
-d : 파티션 삭제
-n : 파티션 생성 ( 추가 시 파티션이 확장형인지 기본형인지 입력 / p : 기본형 / 파티션 숫자 : default = 1)
-t : 파티션 속성 변경
-w : 변경된 정보 저장
-q : 저장 x 

-- mkfs.ext4 /dev/sdb1  : 포맷 명령어로 sdb1장치 포맷진행

-- mount /dev/sdb1 /mnt/test : 포맷을 진행한 sdb1디렉토리를 mnt/test라는 디렉토리를 만들어 연결

-- df 명령어로 마운트 상태 확인

-- umount /mnt/usb1 : usb1에 대한 마운트 해제

마운트를 하면 생성 한 디렉토리에 디스크를 덮는 개념.

마운트 하기전에 생성한 디렉토리에 새로운 파일을 생성하면 마운트 하고 나서는 그 파일이 안보임

반대로 마운트하고나서 파일을 생성하면 마운트해제하고는 그 파일이 안보임

--------------------------------------------------------------------------------------------------------------

