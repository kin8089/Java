LAN : local area network(지역 단위)

WAN : wild area network(LAN 묶음)

MAN


ARPANET : 미 국방부 주도 창설 , 분산네트워크(망) / 네트워크 분산 (전체 통신이 끊기지 않음)
	  대학과 기업의 연계로 인터넷 등장


웹 : 인터넷의 응용서비스

www : world wide web, 넷상의 콘텐츠를 연결 공유하는 인터넷 기반 서비스

HTML : hyperlink 개념을 도입한 문서 형식

Hyperlink : 문서 사이를 링크로 연결 - 빠르게 이동 가능한 개념

URL : 문서에 주소를 붙임

HTTP : 인터넷에 연결된 컴퓨터간 메세지를 보낼 수 있는 통신 규약


------


서버(서비스 제공) / 클라이언트(정보 요청&사용)

서버도 클라이언트가 될 수 있음 (다른 컴퓨터에 요청)


-- web 작동 원리 : request + response


1. 클라이언트가 서버상의 파일의 위치를 지정하여 요청

2. 서버는 요청한 파일을 내부에서 검색

3. 서버는 요청에 적합한 웹 리소스를 클라이언트로 전송

4. 클라이언트는 서버로 받은 HTML을 기반으로 문서의 구조를 렌더링하여 화면에 표시


-------------------------------------------------------------------------------------------

bit.ly/lbt-web

liver server 확장설치

디렉토리 생성

ex01 폴더 복사


-- HTML 기본 구조와 작성법

태그 : 꼬리표, 콘텐츠의 구조와 의미에 대해서 알려줌 <태그>콘텐츠 </태그> (닫아줌)

        HTML 엘리먼트는 여는태그 / 콘텐츠 / 닫는태그로 구성
        
        컨텐츠가 없는 경우 닫는 태그 없이 사용하는 단독태그

        대부분 엘리먼트는 속성을 가지며 중첩이 가능


속성 : 태그의 동작을 제어하기 위해 여는 태그 안에 사용되는 특수용어

        속성은 주로 속성명=속성값의 쌍으로 구성



-- 기본구조 : text - 브라우저에서 읽기 - 태그를 통해 트리구조로 객체화

!DOCTYOE html (문서 형식)

html : 모든 html 페이지의 루트요소

head : 문서의 요약 정보 및 형식

body : 렌더링 되어 실제 브라우저에 표시 될 문서의 본문


-------------------------------------------------------------------------------------

ex01폴더에 skeleton.html 파일 생성

<!DOCTYPE html>
<html>
    <!-- html : 문서의 최상위 요소-->
    <head>
        <!-- meta : 문서의 메타 정보 -->
        <!-- meta name-content :   
            검색엔진이 문서를 잘 검색할 수 있도록
            문서에 관한 정보 제공 -->

        <meta name="keyword"
            content="HTML, CSS, JavaScript" />
        <meta name="description"
            content="웹 프론트엔드 강의" />
        <meta name="author"
            content="김종문" />

        <!-- meta http-equiv:
            문서를 렌더링하기 위한 각종 문서
            정보를 표기 -->
        <!-- HTML4 스타일-->
        <meta http-equiv="Content-Type"
            content="text/html;charset=UTF-8" />

        <!-- HTML5 스타일-->
        <meta charset="UTF-8" />

        <!-- 페이지에 연관되는 리소스 혹은 정보를 제공 -->
        <title>HTML Skeleton</title>
    </head>
    <body>
        <!-- 실제 브라우저에 렌더링 -->
        <h1>HTML Skeleton</h1>
        <p>첫 번째 HTML</p>
    </body>
</html>

작성 후 우클릭 - open with live server 클릭


-- 태그

1. 텍스트 관련 태그

	Heading Tag : <h1> ~ <h6>
		문서의 제목을 표현
		숫자가 낮을수록 중요한 헤더 정보

	Paragraph Tag : <p>
		문서의 본문(문단)을 표현
		기본적으로 HTML은 개행(줄 바꿈)을 하지 않음
		줄 바꿈을 표시할 때는 br태그를 사용
		
		ex) <p>br태그는 줄바꿈을<br> 표시할 수 있습니다</p>

		수평줄 표시 <hr> 태그는 다른태그 안에서 중첩을 기피

	특수문자 표기 : 연속공백이 있어도 브라우저는 공백 한 개로 렌더링
		여러 공백 표기하기 위해서는 &nbsp; 사용

		&nbsp; : 공백

		&lt;	<

		&gt;	>

		&amp	&

		&copy;

		&quot	*

	텍스트 모양 관련 태그 : 웹 페이지의 글자에 형태와 의미 부여
	
		b	굵은 글자

		i	기울어진 글자
	
		small	작은 글자

		sub	아래 첨자

		sup	위 첨자

		ing	밑줄 글자

		del	가운데 줄이 그어진 글자

		em	텍스트 강조

		strong	강한

	하이퍼링크 태그 **
	
		a	사용자의 클릭에 따라 관련된 특정 정보로 이동

		ex) <a herf="google.com">구글</a>

		herf : 링크 클릭시 이동할 위치를 지정하는 속성

		외부링크(서버 외부) : 링크할 외부 웹 서버의 주소와 페이지
				위치를 모두 기술한다 		
		
		내부링크 : 현재 페이지와 동일한 서버내에 위치하므로
			서버 주소는 명시할 필요가 없다
		
			절대 경로 : 최상위(ROOT)디렉토리 기준으로 경로 지정
			
			상대 경로 : 현재 페이지를 기준으로 경로 지정


---------------------------------------------------------------------------------------

-- index 파일로 예제

<!DOCTYPE html>
<html>
	<head>
		<title>Bit Lounge</title>
		<meta
		http-equiv="Content" 
			content="text/html; charset=UTF-8" />
	</head>
	<body>
		<h1>Welcome to the Lounge</h1>
		<img src = "/ex01/images/drinks.gif" />
		<p>라운지에서 시원한 [링크:elixir]건강 음료[/링크], 동료들과의 대화로 하루 스트레스를 확 날려 버리세요. 편안한 음악도 감상하세요. 무선인터넷에도 언제든지 접속 가능합니다.   </p>
		<h2>오시는 길</h2>
		<p>3층에서 바로 찾을 수 있어요.</p>
	</body>
</html>


-------------------------------------------------------------------------------------------

엘릭서 - 실습 (링크x)

<!DOCTYPE html>
<html>
  <head>
      <title>Bit Lounge 건강음료</title>
      <meta
      http-equiv="Content"
        content="text/html; charset=UTF-8" />
  </head>
  <body>
      <h1>건강 음료</h1>
      <h2>Green Tea Cooler</h2>
      <img src="/ex01/images/green.jpg" />
      <p>Chock full of vitamins and minerals, this elixir combines the healthful benefits of green tea with a twist of chamomile blossoms and ginger root.</p>

      <h3>Raspberry Ice Concentration</h3>
      <img src="/ex01/images/lightblue.jpg" />
      <p> Combining raspberry juice with lemon grass, citrus peel and rosehips, this icy drink will make your mind feel clear and crisp.</p>

      <h4>Blueberry Bliss Elixir</h4>
      <img src="/ex01/images/blue.jpg" />
      <p>Blueberries and cherry essence mixed into a base of elderflower herb tea will put you in a relaxed state of bliss in no time.</p>

      <h5>CranberrAntioxidant Blast</h5>
      <img src="/ex01/images/red.jpg" />
      <p>Wake up to the flavors of cranberry and hibiscus in this vitamin C rich elixir.</p>
    </body>
</html>

---------------------------------------------------------------------------------------

목록 태그 : 여러 항목의 목록을 나열하는 태그

ul : 순서가 없는 목록

ol : 순서가 있는 목록

li : ul,ol의 하부에 위치하는 목록의 항목 태그


테이블 태그 : 표를 만들 때 사용하는 태그

테이블 캡션 : caption

테이블 헤더 : thead

테이블 본문 : tbody

테이블 푸터 : tfoot

테이블 태그는 계층 구조로 작성

<tr> : 테이블의 한 열을 표현

<td> : tr태그 내에서 하나의 행을 표현
	
<th> 

rowspan : 행의 확장

colspan : 행의 확장


이미지 태그 : 웹 페이지 내에 이미지를 삽입하는 태그

img 태그는 태그 내부에 별도 콘텐츠가 없어 단독 태그로 사용

<img src="" alt="" />

시각장애인은 스크린 리더로 웹페이지를 듣는다

<img src="" alt="" />


공간 분할 태그 : 모든 HTML 요소는 공간을 점유하는 방식 (block vs inline)

block : h1, p / 가로 전체 차지, 다음 행으로 넘어감
	<div> : inline요소로 줄 바꿈이 일어난다
	

inline : a, input, 글자 형식 태그 / 흐름이 안끊기고 이어짐
	<span> : inline요소로 줄 바꿈이 일어나지 않는다



시맨틱 태그 : div의 변형, 검색 엔진이 검색어의 의미를 스스로 분석하여
	     원하는 정보를 정교하게 찾아주는 검색 방식(지능형 웹)

	header : 헤더

	nav : 네비게이션

	aside : 사이드 공간

	section : 여러 중심 내용을 감싸는 공간
	
	article : 글 내용이 들어가는 실질적 공간

	footer : 푸터(저작권등 표기)



** 입력양식 태그(Form) : 동적 웹을 구성하기 위해서 사용
		    사용자에게 정보를 입력 받는 공간

form은 웹프론트 HTML에서 서버로 데이터를 전송하기 위해 사용

	form(절대 중첩 불가)

	<form method> : 메소드 = 서버로 데이터 보낼 때 사용
				전송 방식(GET POST) 기본값은 GET

	<form action> : 액션 = 폼으로 전송하는 데이터를 전달받아 처리 할
				서버의 페이지 주소를 생략하면 현재
				페이지로 데이터를 전송

		
		양식 태그

		input : 전송할 데이터를 입력하기 위한 영역
			form태그 안쪽에 구축

			type : 입력 영영의 종류 (기본값 text)

			name : 전송할 데이터의 이름

		타입 태그

		text : 텍스트 입력 영역

		password : 암호 입력 영역

		hidden : 숨겨진 입력 영역

		file : 파일 정보 선택 영역

		submit : 전송 버튼

		button : 사용자 정의 버튼
		


id : html에서 쓰고자 할때 사용


--------------------------------------------------------------------------------

css (Cascading Style Sheet) : 

Cascading : 계단형의 의미로 스타일 적용시 규칙에 따라 우선 순위가 있고
	우선 순위에 따라 최종 렌더링 할 스타일이 정해짐
	
	
	inline style : 태그에 직접
	
	page css : 한 HTML페이지에 적용되는 스타일    ↑

	외부 css : 여러 페이지에 적용되는 스타일	↑
	
	브라우저 css				↑				

	규칙 위반 (important : 모든 규칙을 무시) 


css 필요 이유 : HTML에 직접 스타일을 적용함으로 생기는 문서 자체의 무거움 감소

	       하나의 스타일 시트로 다수의 페이지를 같은 속성을 적용함으로 시간 감소

	       웹 표준의 원칙 : HTML마크업은 구조를 잡는데 CSS로 디자인을 결정


가장 기본적인 스타일의 적용 : HTML 태그에 style 속성으로 지정


외부 스타일 시트 : 웹 표준의 측면에서 가장 적합
		
		여러 사람이 협업하거나 프로젝트의 규모가 클때 효율적

		rel = "리소스 종류" - 반드시 기재


스타일을 부여하고자 하는 요소 선택 *

css 선택자 (Selector) : 특정한 HTML 태그를 선택할 때 사용
		선택자를 사용하여 태그를 선택하면 조건에 맞는 태그에 
		스타일이나 스크립트를 적용 가능

		선택자는 자바스크립트에서도 사용하므로 꼭 이해해야함

		전체 선택자 : * / HTML 문서 내의 모든 태그 선택

		태그 선택자 : 태그명 / HTML 문서 내의 모든 지정 태그 선택

		아이디 선택자 : #아이디 / 페이지 내에서 중복 불가

		클래스 선택자 : .클래스 / 중복 가능, 1개의 요소가 여러 클래스 가능
	

-- 스타일 적용 우선 순위

	인라인 스타일
	페이지 스타일
	외부 스타일
	브라우저 기본 스타일 ↑ 순서로 올라감


-- 스타일 작성 순서(우선 순위가 동일 시)

	나중에 작항한 것을 적용


-- 선택자 우선 순위

	아이디 선택자
	클래스 선택자
	태그 선택자
	전체 선택자